/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockBlocklockReceiver,
  MockBlocklockReceiverInterface,
} from "../MockBlocklockReceiver";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "timelockContract",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createTimelockRequest",
    inputs: [
      {
        name: "decryptionBlockNumber",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "encryptedData",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "encrytpedValue",
    inputs: [],
    outputs: [
      {
        name: "u",
        type: "tuple",
        internalType: "struct BLS.PointG2",
        components: [
          {
            name: "x",
            type: "uint256[2]",
            internalType: "uint256[2]",
          },
          {
            name: "y",
            type: "uint256[2]",
            internalType: "uint256[2]",
          },
        ],
      },
      {
        name: "v",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "w",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "plainTextValue",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "receiveBlocklock",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "timelock",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IBlocklockSender",
      },
    ],
    stateMutability: "view",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50604051610b47380380610b4783398101604081905261002e91610053565b600880546001600160a01b0319166001600160a01b0392909216919091179055610080565b5f60208284031215610063575f80fd5b81516001600160a01b0381168114610079575f80fd5b9392505050565b610aba8061008d5f395ff3fe608060405234801561000f575f80fd5b506004361061005f575f3560e01c80626d6cae14610063578063492eea421461007e5780635d9418021461009557806397a9c285146100aa57806398e5a5e7146100b3578063d33219b4146100c6575b5f80fd5b61006b5f5481565b6040519081526020015b60405180910390f35b6100866100f1565b604051610075939291906104c1565b6100a86100a3366004610510565b61027d565b005b61006b60075481565b61006b6100c1366004610585565b6103c0565b6008546100d9906001600160a01b031681565b6040516001600160a01b039091168152602001610075565b604080516080810180835260019283918391820190839060029082845b81548152602001906001019080831161010e57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116101445750505050508152505090806004018054610170906105cf565b80601f016020809104026020016040519081016040528092919081815260200182805461019c906105cf565b80156101e75780601f106101be576101008083540402835291602001916101e7565b820191905f5260205f20905b8154815290600101906020018083116101ca57829003601f168201915b5050505050908060050180546101fc906105cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610228906105cf565b80156102735780601f1061024a57610100808354040283529160200191610273565b820191905f5260205f20905b81548152906001019060200180831161025657829003601f168201915b5050505050905083565b6008546001600160a01b031633146102ea5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c792074696d656c6f636b20636f6e74726163742063616e2063616c6c206044820152643a3434b99760d91b60648201526084015b60405180910390fd5b5f54831461032f5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd081a5960721b60448201526064016102e1565b60085460405163326f063160e21b81526001600160a01b039091169063c9bc18c49061036490600190869086906004016106ca565b5f60405180830381865afa15801561037e573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526103a59190810190610745565b8060200190518101906103b891906107ed565b600755505050565b60085460405163236695a160e11b81525f916001600160a01b0316906346cd2b42906103f2908690869060040161084d565b6020604051808303815f875af115801561040e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061043291906107ed565b5f5581600161044182826109fc565b50505f549392505050565b805f5b600281101561046e57815184526020938401939091019060010161044f565b50505050565b5f5b8381101561048e578181015183820152602001610476565b50505f910152565b5f81518084526104ad816020860160208601610474565b601f01601f19169290920160200192915050565b6104cc81855161044c565b5f60208501516104df604084018261044c565b5060c060808301526104f460c0830185610496565b82810360a08401526105068185610496565b9695505050505050565b5f805f60408486031215610522575f80fd5b83359250602084013567ffffffffffffffff80821115610540575f80fd5b818601915086601f830112610553575f80fd5b813581811115610561575f80fd5b876020828501011115610572575f80fd5b6020830194508093505050509250925092565b5f8060408385031215610596575f80fd5b82359150602083013567ffffffffffffffff8111156105b3575f80fd5b830160c081860312156105c4575f80fd5b809150509250929050565b600181811c908216806105e357607f821691505b60208210810361060157634e487b7160e01b5f52602260045260245ffd5b50919050565b805f5b600281101561046e57815484526020909301926001918201910161060a565b5f8154610635816105cf565b808552602060018381168015610652576001811461066c57610697565b60ff1985168884015283151560051b880183019550610697565b865f52825f205f5b8581101561068f5781548a8201860152908301908401610674565b890184019650505b505050505092915050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081526106db6040820185610607565b6106eb6080820160028601610607565b60c0808201525f610703610100830160048701610629565b828103603f190160e084015261071c8160058801610629565b905082810360208401526105068185876106a2565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610755575f80fd5b815167ffffffffffffffff8082111561076c575f80fd5b818401915084601f83011261077f575f80fd5b81518181111561079157610791610731565b604051601f8201601f19908116603f011681019083821181831017156107b9576107b9610731565b816040528281528760208487010111156107d1575f80fd5b6107e2836020830160208801610474565b979650505050505050565b5f602082840312156107fd575f80fd5b5051919050565b5f808335601e19843603018112610819575f80fd5b830160208101925035905067ffffffffffffffff811115610838575f80fd5b803603821315610846575f80fd5b9250929050565b828152604060208201526040826040830137604080830160808301375f6108776080840184610804565b60c08085015261088c610100850182846106a2565b91505061089c60a0850185610804565b848303603f190160e08601526107e28382846106a2565b5f808335601e198436030181126108c8575f80fd5b83018035915067ffffffffffffffff8211156108e2575f80fd5b602001915036819003821315610846575f80fd5b601f82111561093d57805f5260205f20601f840160051c8101602085101561091b5750805b601f840160051c820191505b8181101561093a575f8155600101610927565b50505b505050565b67ffffffffffffffff83111561095a5761095a610731565b61096e8361096883546105cf565b836108f6565b5f601f84116001811461099f575f85156109885750838201355b5f19600387901b1c1916600186901b17835561093a565b5f83815260208120601f198716915b828110156109ce57868501358255602094850194600190920191016109ae565b50868210156109ea575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b815f5b6002811015610a1c578135838201556020909101906001016109ff565b5050604082015f5b6002808210610a335750610a4a565b823584830190910155602090910190600101610a24565b5050610a5960808301836108b3565b610a67818360048601610942565b5050610a7660a08301836108b3565b61046e81836005860161094256fea26469706673582212203aca39bd897c2c31540e5213b8e6abb810d18e5857b6e138663be577615e659964736f6c63430008180033";

type MockBlocklockReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBlocklockReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBlocklockReceiver__factory extends ContractFactory {
  constructor(...args: MockBlocklockReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    timelockContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(timelockContract, overrides || {});
  }
  override deploy(
    timelockContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(timelockContract, overrides || {}) as Promise<
      MockBlocklockReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockBlocklockReceiver__factory {
    return super.connect(runner) as MockBlocklockReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBlocklockReceiverInterface {
    return new Interface(_abi) as MockBlocklockReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockBlocklockReceiver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockBlocklockReceiver;
  }
}
