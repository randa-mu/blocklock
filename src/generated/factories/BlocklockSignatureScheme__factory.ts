/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  BlocklockSignatureScheme,
  BlocklockSignatureSchemeInterface,
} from "../BlocklockSignatureScheme";

const _abi = [
  {
    type: "function",
    name: "DST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SCHEME_ID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hashToBytes",
    inputs: [
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hashToPoint",
    inputs: [
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifySignature",
    inputs: [
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "publicKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "isValid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "BNAddFailed",
    inputs: [
      {
        name: "input",
        type: "uint256[4]",
        internalType: "uint256[4]",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidDSTLength",
    inputs: [
      {
        name: "dst",
        type: "bytes",
        internalType: "bytes",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidFieldElement",
    inputs: [
      {
        name: "x",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "MapToPointFailed",
    inputs: [
      {
        name: "noSqrt",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ModExpFailed",
    inputs: [
      {
        name: "base",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "exponent",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "modulus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50611f598061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633033cc51146100595780635f7c7522146100865780638a1f165a1461009b578063eae1e15b146100cd578063f6e548e9146100e0575b5f80fd5b61006c610067366004611c19565b610103565b604080519283526020830191909152015b60405180910390f35b61008e610173565b60405161007d9190611ca5565b61008e60405180604001604052806013815260200172424e3235342d424c532d424c4f434b4c4f434b60681b81525081565b61008e6100db366004611c19565b61018f565b6100f36100ee366004611cbe565b6101c9565b604051901515815260200161007d565b5f805f61015d6040518060600160405280602c8152602001611ed8602c913986868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506102b892505050565b80516020909101519093509150505b9250929050565b6040518060600160405280602c8152602001611ed8602c913981565b60605f8061019d8585610103565b915091506101be604051806040016040528084815260200183815250610384565b925050505b92915050565b5f8061020988888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506103bd92505050565b90505f61024a87878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506103bd92505050565b90505f61028b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061044092505050565b90505f8061029a8484876104e1565b915091508180156102a85750805b9c9b505050505050505050505050565b604080518082019091525f80825260208201525f6102d68484610654565b90505f6102e982825b6020020151610709565b90505f6102f78360016102df565b9050610301611b5c565b825181526020808401518282015282516040808401919091529083015160608301525f908460808460066107d05a03fa90508061035c5781604051630251c7e160e31b81526004016103539190611d65565b60405180910390fd5b6040805180820190915284518152602081018560016020020151905298975050505050505050565b6040805181815260608181018352915f919060208201818036833750508451602095860151958301525060408101939093525090919050565b604080518082019091525f808252602082015281516040146104215760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964204731206279746573206c656e6774680000000000000000006044820152606401610353565b5060208181015160409283015183518085019094529083529082015290565b610448611b7a565b81516080146104995760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964204732206279746573206c656e6774680000000000000000006044820152606401610353565b50602081810151604080840151606080860151608096870151845197880185528785019586529187019290925292855281518083019092528152808301919091529082015290565b5f805f604051806101800160405280875f01518152602001876020015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d8152602001855f0151815260200185602001518152602001865f01516001600281106105c4576105c4611d51565b60200201518152602001865f01515f600281106105e3576105e3611d51565b60200201518152602001866020015160016002811061060457610604611d51565b6020020151815260200186602001515f6002811061062457610624611d51565b602002015190529050610635611b9f565b6020816101808460086107d05a03fa9051151597909650945050505050565b61065c611bbd565b5f61066784846109ea565b90505f805f80601885016001600160c01b0381511693506030860190506001600160c01b0381511694505f80516020611eb8833981519152855f80516020611eb8833981519152600160c01b870908604887015160608801516001600160c01b03908116975016945092505f80516020611eb883398151915290508481600160c01b860908604080518082019091529283526020830152509695505050505050565b610711611bbd565b5f80516020611eb883398151915282106107415760405163d53e941560e01b815260048101839052602401610353565b5f5f80516020611eb883398151915260045f80516020611eb88339815191528586090990505f5f80516020611eb88339815191528260010890505f80516020611eb88339815191526107a0835f80516020611eb8833981519152611da9565b60010891505f6107bf5f80516020611eb8833981519152838509610b41565b90505f5f80516020611eb883398151915278016789af3a83522eb353c98fc6b36d713d5d8d1cc5dffffffa5f80516020611eb8833981519152845f80516020611eb8833981519152888b09090990505f5f80516020611eb8833981519152610834835f80516020611eb8833981519152611da9565b5f80516020611f048339815191520890505f5f80516020611eb8833981519152835f80516020611f048339815191520890505f5f80516020611eb883398151915286870990505f5f80516020611eb883398151915286830990505f5f80516020611eb8833981519152805f80516020611eb88339815191528485097f10216f7ba065e00de81ac1e7808072c9dd2b2385cd7b438469602eb24829a9bd0960010890505f806108e96108e488610b4b565b610b84565b5f0b60010361093957868c526108fe87610b4b565b905061090981610be9565b60208e01919091529150816109345760405163396ec77160e01b815260048101829052602401610353565b61099c565b6109456108e487610b4b565b5f0b60010361095a57858c526108fe86610b4b565b828c5261096683610b4b565b905061097181610be9565b60208e019190915291508161099c5760405163396ec77160e01b815260048101829052602401610353565b60208c01516109aa90610c10565b6109b38e610c10565b146109da5760208c01516109d4905f80516020611eb8833981519152611da9565b60208d01525b5050505050505050505050919050565b815160609060ff811115610a1357836040516313727cdd60e11b81526004016103539190611ca5565b60408051608880825260c082019092525f916020820181803683370190505090505f81855f60605f8a88604051602001610a539796959493929190611dbc565b60405160208183030381529060405290505f818051906020012090505f8160018987604051602001610a889493929190611e40565b60408051808303601f1901815282825280516020820120606080855260808501909352909350915f91602082018180368337019050509050600360015b81811015610b2457858418610adb826001611e85565b8d8b604051602001610af09493929190611e40565b60408051808303601f1901815291905260205f19830181028501810195909552805194810194909420939450600101610ac5565b505f19016020908102820101919091529550505050505092915050565b5f6101c382610c1c565b5f5f80516020611eb883398151915260035f80516020611eb8833981519152845f80516020611eb8833981519152868709090892915050565b5f80610b8f83611361565b9050610ba960015f80516020611eb8833981519152611da9565b8103610bb857505f1992915050565b8015801590610bc8575080600114155b156101c35760405163396ec77160e01b815260048101849052602401610353565b5f80610bf483611429565b9150825f80516020611eb8833981519152838409149050915091565b5f6101c3600283611e98565b5f5f80516020611eb88339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab6040805160c080825260e082019092525f918291906020820181803683370190505060208082018181526040830182905260608301829052608083018690525f80516020611f0483398151915260a08401525f80516020611eb883398151915260c0808501919091529293505f92839160055afa90505f519250806114225760405163c6daf7ab60e01b8152600481018590525f80516020611f0483398151915260248201525f80516020611eb88339815191526044820152606401610353565b5050919050565b5f5f80516020611eb88339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60405180608001604052806004906020820280368337509192915050565b6040518060400160405280611b8d611bbd565b8152602001611b9a611bbd565b905290565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b5f8083601f840112611beb575f80fd5b50813567ffffffffffffffff811115611c02575f80fd5b60208301915083602082850101111561016c575f80fd5b5f8060208385031215611c2a575f80fd5b823567ffffffffffffffff811115611c40575f80fd5b611c4c85828601611bdb565b90969095509350505050565b5f5b83811015611c72578181015183820152602001611c5a565b50505f910152565b5f8151808452611c91816020860160208601611c58565b601f01601f19169290920160200192915050565b602081525f611cb76020830184611c7a565b9392505050565b5f805f805f8060608789031215611cd3575f80fd5b863567ffffffffffffffff80821115611cea575f80fd5b611cf68a838b01611bdb565b90985096506020890135915080821115611d0e575f80fd5b611d1a8a838b01611bdb565b90965094506040890135915080821115611d32575f80fd5b50611d3f89828a01611bdb565b979a9699509497509295939492505050565b634e487b7160e01b5f52603260045260245ffd5b6080810181835f5b6004811015611d8c578151835260209283019290910190600101611d6d565b50505092915050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156101c3576101c3611d95565b5f8851611dcd818460208d01611c58565b885190830190611de1818360208d01611c58565b60f889811b6001600160f81b03199081169390920192835288811b8216600184015287901b811660028301528551611e20816003850160208a01611c58565b60f89590951b169301600381019390935250506004019695505050505050565b8481525f60ff60f81b808660f81b1660208401528451611e67816021860160208901611c58565b60f89490941b16919092016021810191909152602201949350505050565b808201808211156101c3576101c3611d95565b5f82611eb257634e487b7160e01b5f52601260045260245ffd5b50069056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47424c4f434b4c4f434b5f424e32353447315f584d443a4b454343414b2d3235365f535644575f524f5f48315f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea3a26469706673582212204b27ab8148a4da9e67eccb564707f89ac046ef48967eabf20d45394ebb30813e64736f6c63430008180033";

type BlocklockSignatureSchemeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlocklockSignatureSchemeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlocklockSignatureScheme__factory extends ContractFactory {
  constructor(...args: BlocklockSignatureSchemeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BlocklockSignatureScheme & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BlocklockSignatureScheme__factory {
    return super.connect(runner) as BlocklockSignatureScheme__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlocklockSignatureSchemeInterface {
    return new Interface(_abi) as BlocklockSignatureSchemeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlocklockSignatureScheme {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BlocklockSignatureScheme;
  }
}
