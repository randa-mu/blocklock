/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SignatureSchemeAddressProvider,
  SignatureSchemeAddressProviderInterface,
} from "../SignatureSchemeAddressProvider";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ADMIN_ROLE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DEFAULT_ADMIN_ROLE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoleAdmin",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSignatureSchemeAddress",
    inputs: [
      {
        name: "schemeID",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRole",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasRole",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSupportedScheme",
    inputs: [
      {
        name: "schemeID",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceRole",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "callerConfirmation",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeRole",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateSignatureScheme",
    inputs: [
      {
        name: "schemeID",
        type: "string",
        internalType: "string",
      },
      {
        name: "schemeAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "NewSignatureSchemeAddressAdded",
    inputs: [
      {
        name: "schemeID",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "schemeAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "addedAt",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleAdminChanged",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "previousAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "newAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleGranted",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleRevoked",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AccessControlBadConfirmation",
    inputs: [],
  },
  {
    type: "error",
    name: "AccessControlUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "neededRole",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c0b380380610c0b83398101604081905261002f916101ac565b6001600160a01b0381166100405750335b61004b600082610100565b6100905760405162461bcd60e51b815260206004820152601160248201527011dc985b9d081c9bdb194819985a5b1959607a1b60448201526064015b60405180910390fd5b6100ba7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177582610100565b6100fa5760405162461bcd60e51b815260206004820152601160248201527011dc985b9d081c9bdb194819985a5b1959607a1b6044820152606401610087565b506101dc565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166101a2576000838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561015a3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101a6565b5060005b92915050565b6000602082840312156101be57600080fd5b81516001600160a01b03811681146101d557600080fd5b9392505050565b610a20806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635bb09cf811610081578063a217fddf1161005b578063a217fddf14610205578063bab867da1461020d578063d547741f1461022057600080fd5b80635bb09cf81461016257806375b238fc1461019a57806391d14854146101c157600080fd5b80632f2ff15d116100b25780632f2ff15d146101275780632fc9fa331461013c57806336568abe1461014f57600080fd5b806301ffc9a7146100ce578063248a9ca3146100f6575b600080fd5b6100e16100dc366004610844565b610233565b60405190151581526020015b60405180910390f35b61011961010436600461088d565b60009081526020819052604090206001015490565b6040519081526020016100ed565b61013a6101353660046108cf565b6102cc565b005b6100e161014a366004610944565b6102f7565b61013a61015d3660046108cf565b610352565b610175610170366004610944565b6103b0565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b6101197fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6100e16101cf3660046108cf565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b610119600081565b61013a61021b366004610986565b6103f2565b61013a61022e3660046108cf565b6105d1565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806102c657507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000828152602081905260409020600101546102e7816105f6565b6102f18383610603565b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600184846040516103229291906109da565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff161415905092915050565b73ffffffffffffffffffffffffffffffffffffffff811633146103a1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ab82826106ff565b505050565b6000600183836040516103c49291906109da565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16905092915050565b61041b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756105f6565b73ffffffffffffffffffffffffffffffffffffffff8116158015610454575073ffffffffffffffffffffffffffffffffffffffff81163b155b156104e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f496e76616c696420636f6e7472616374206164647265737320666f722073636860448201527f656d65416464726573730000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b80600184846040516104f99291906109da565b908152604051908190036020018120805473ffffffffffffffffffffffffffffffffffffffff939093167fffffffffffffffffffffffff00000000000000000000000000000000000000009093169290921790915560019061055e90859085906109da565b9081526040519081900360200181205473ffffffffffffffffffffffffffffffffffffffff169061059290859085906109da565b604051908190038120428252907f0a1cd6a1e0a7b200d28ead555f3cee96e0d2def049535fbcfdc2926bc4cec5049060200160405180910390a3505050565b6000828152602081905260409020600101546105ec816105f6565b6102f183836106ff565b61060081336107ba565b50565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915281205460ff166106f75760008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556106953390565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016102c6565b5060006102c6565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915281205460ff16156106f75760008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8616808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016102c6565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610840576040517fe2517d3f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602481018390526044016104dd565b5050565b60006020828403121561085657600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461088657600080fd5b9392505050565b60006020828403121561089f57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146108ca57600080fd5b919050565b600080604083850312156108e257600080fd5b823591506108f2602084016108a6565b90509250929050565b60008083601f84011261090d57600080fd5b50813567ffffffffffffffff81111561092557600080fd5b60208301915083602082850101111561093d57600080fd5b9250929050565b6000806020838503121561095757600080fd5b823567ffffffffffffffff81111561096e57600080fd5b61097a858286016108fb565b90969095509350505050565b60008060006040848603121561099b57600080fd5b833567ffffffffffffffff8111156109b257600080fd5b6109be868287016108fb565b90945092506109d19050602085016108a6565b90509250925092565b818382376000910190815291905056fea2646970667358221220be418efdef76b31758a0932f03eac9ec5e7149eb34f265f2c27f87842d8e1d3564736f6c63430008180033";

type SignatureSchemeAddressProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignatureSchemeAddressProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignatureSchemeAddressProvider__factory extends ContractFactory {
  constructor(...args: SignatureSchemeAddressProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      SignatureSchemeAddressProvider & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SignatureSchemeAddressProvider__factory {
    return super.connect(runner) as SignatureSchemeAddressProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureSchemeAddressProviderInterface {
    return new Interface(_abi) as SignatureSchemeAddressProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignatureSchemeAddressProvider {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SignatureSchemeAddressProvider;
  }
}
