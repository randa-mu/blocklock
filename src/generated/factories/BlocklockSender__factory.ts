/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  BlocklockSender,
  BlocklockSenderInterface,
} from "../BlocklockSender";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_decryptionSender",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DST_H1_G1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DST_H2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DST_H3",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DST_H4",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SCHEME_ID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "blocklockRequests",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "decryptionRequestID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "blockHeight",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "callback",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decrypt",
    inputs: [
      {
        name: "ciphertext",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decryptionSender",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDecryptionSender",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequest",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct TypesLib.BlocklockRequest",
        components: [
          {
            name: "decryptionRequestID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "blockHeight",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "ciphertext",
            type: "tuple",
            internalType: "struct TypesLib.Ciphertext",
            components: [
              {
                name: "u",
                type: "tuple",
                internalType: "struct BLS.PointG2",
                components: [
                  {
                    name: "x",
                    type: "uint256[2]",
                    internalType: "uint256[2]",
                  },
                  {
                    name: "y",
                    type: "uint256[2]",
                    internalType: "uint256[2]",
                  },
                ],
              },
              {
                name: "v",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "w",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callback",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isInFlight",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "receiveDecryptionData",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestBlocklock",
    inputs: [
      {
        name: "blockHeight",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "BlocklockCallbackSuccess",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "blockHeight",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        indexed: false,
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "decryptionKey",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BlocklockRequested",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "blockHeight",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        indexed: false,
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "requester",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "requestedAt",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "BlocklockCallbackFailed",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidDSTLength",
    inputs: [
      {
        name: "dst",
        type: "bytes",
        internalType: "bytes",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a060405234801562000010575f80fd5b50604051620024aa380380620024aa8339810160408190526200003391620000bb565b806001600160a01b038116620000a85760405162461bcd60e51b815260206004820152603060248201527f43616e6e6f7420736574207a65726f206164647265737320617320646563727960448201526f383a34b7b71035b2bc9039b2b73232b960811b606482015260840160405180910390fd5b6001600160a01b031660805250620000ea565b5f60208284031215620000cc575f80fd5b81516001600160a01b0381168114620000e3575f80fd5b9392505050565b608051612393620001175f395f818160ba01528181610321015281816105120152610ef201526123935ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c80637350f4561161006e5780637350f45614610154578063826d362b1461015c5780638a1f165a14610180578063c58343ef146101b2578063c9bc18c4146101d2578063cd802c91146101e5575f80fd5b8063133c40c7146100b5578063235296f7146100f957806338c27d121461010e57806346cd2b42146101165780635d3be0011461013757806367b276af1461014c575b5f80fd5b6100dc7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610101610208565b6040516100f09190611979565b610101610224565b6101296101243660046119a1565b610240565b6040519081526020016100f0565b61014a610145366004611a23565b610507565b005b6101016105f8565b610101610614565b61016f61016a366004611a97565b610630565b6040516100f0959493929190611b31565b61010160405180604001604052806013815260200172424e3235342d424c532d424c4f434b4c4f434b60681b81525081565b6101c56101c0366004611a97565b610887565b6040516100f09190611b7c565b6101016101e0366004611bea565b610b46565b6101f86101f3366004611a97565b610e81565b60405190151581526020016100f0565b6040518060600160405280602c81526020016122ee602c913981565b6040518060600160405280602281526020016122cc6022913981565b5f4383116102af5760405162461bcd60e51b815260206004820152603160248201527f626c6f636b486569676874206d757374206265207374726963746c7920677265604482015270185d195c881d1a185b8818dd5c9c995b9d607a1b60648201526084015b60405180910390fd5b5f6040518060a001604052805f8152602001858152602001846102d190611d9f565b815260200160405180602001604052805f8152508152602001336001600160a01b031681525090505f8460405160200161030d91815260200190565b60405160208183030381529060405290505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f87f0e6160405180604001604052806013815260200172424e3235342d424c532d424c4f434b4c4f434b60681b8152508760405160200161038b9190611efc565b604051602081830303815290604052856040518463ffffffff1660e01b81526004016103b993929190611f0e565b6020604051808303815f875af11580156103d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f99190611f46565b8084525f818152602081815260409182902086518155908601516001820155908501518051805193945086936002808501929183916104399183916117c8565b50602082015161044f90600280840191906117c8565b505050602082015160048201906104669082611fd8565b506040820151600582019061047b9082611fd8565b505050606082015160088201906104929082611fd8565b5060809190910151600990910180546001600160a01b0319166001600160a01b03909216919091179055604051339082907f126e74afe6053bc58ebb2677b900753aa56801a8b86023af245885b817dc7c2e906104f4908a908a904290612098565b60405180910390a3925050505b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461057f5760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792044656372797074696f6e53656e6465722063616e2063616c6c000060448201526064016102a6565b6105f18585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f890181900481028201810190925287815292508791508690819084018382808284375f92019190915250610f6a92505050565b5050505050565b60405180606001604052806022815260200161231a6022913981565b60405180606001604052806022815260200161233c6022913981565b5f602081905290815260409081902080546001820154835160e0810194859052919390929190600280840191839160608301918491839160a0860191849182845b81548152602001906001019080831161067157505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116106a75750505050508152505081526020016004820180546106d790611f5d565b80601f016020809104026020016040519081016040528092919081815260200182805461070390611f5d565b801561074e5780601f106107255761010080835404028352916020019161074e565b820191905f5260205f20905b81548152906001019060200180831161073157829003601f168201915b5050505050815260200160058201805461076790611f5d565b80601f016020809104026020016040519081016040528092919081815260200182805461079390611f5d565b80156107de5780601f106107b5576101008083540402835291602001916107de565b820191905f5260205f20905b8154815290600101906020018083116107c157829003601f168201915b505050505081525050908060080180546107f790611f5d565b80601f016020809104026020016040519081016040528092919081815260200182805461082390611f5d565b801561086e5780601f106108455761010080835404028352916020019161086e565b820191905f5260205f20905b81548152906001019060200180831161085157829003601f168201915b505050600990930154919250506001600160a01b031685565b61088f611806565b5f82815260208181526040808320815160a0808201845282548252600183015494820194909452825160e08101808552919492938501929091600280860192849260608401928592849290860191849182845b8154815260200190600101908083116108e257505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161091857505050505081525050815260200160048201805461094890611f5d565b80601f016020809104026020016040519081016040528092919081815260200182805461097490611f5d565b80156109bf5780601f10610996576101008083540402835291602001916109bf565b820191905f5260205f20905b8154815290600101906020018083116109a257829003601f168201915b505050505081526020016005820180546109d890611f5d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0490611f5d565b8015610a4f5780601f10610a2657610100808354040283529160200191610a4f565b820191905f5260205f20905b815481529060010190602001808311610a3257829003601f168201915b5050505050815250508152602001600882018054610a6c90611f5d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9890611f5d565b8015610ae35780601f10610aba57610100808354040283529160200191610ae3565b820191905f5260205f20905b815481529060010190602001808311610ac657829003601f168201915b5050509183525050600991909101546001600160a01b031660209091015280519091506105015760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c995c5d595cdd1251607a1b60448201526064016102a6565b6060610b5560808501856120c0565b905061010003610ba75760405162461bcd60e51b815260206004820152601d60248201527f696e76616c69642064656372797074696f6e206b6579206c656e67746800000060448201526064016102a6565b610100610bb760a08601866120c0565b905010610c065760405162461bcd60e51b815260206004820152601d60248201527f6d657373616765206f6620756e737570706f72746564206c656e67746800000060448201526064016102a6565b5f610c1460808601866120c0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509394505050505b83811015610ca857848482818110610c6457610c64612103565b9050013560f81c60f81b828281518110610c8057610c80612103565b0160200180516001600160f81b0319908116909218909116905f82901a905350600101610c4a565b505f610cb760a08701876120c0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250604080516060810190915260228082529596509094610d229450909250905061231a602083013984610d1b60a08b018b6120c0565b90506113d2565b90505f5b610d3360a08901896120c0565b9050811015610d9357818181518110610d4e57610d4e612103565b602001015160f81c60f81b838281518110610d6b57610d6b612103565b0160200180516001600160f81b0319908116909218909116905f82901a905350600101610d26565b505f610dd860405180606001604052806022815260200161233c602291398585604051602001610dc4929190612117565b604051602081830303815290604052611568565b90505f610de4826115c7565b90505f80610e0083610dfb368e90038e018e612145565b611659565b909250905060018215158215151414610e725760405162461bcd60e51b815260206004820152602e60248201527f696e76616c69642064656372797074696f6e206b6579202f206369706865727460448201526d195e1d081c9959da5cdd195c995960921b60648201526084016102a6565b50939998505050505050505050565b5f8181526020819052604081205480610edc5760405162461bcd60e51b815260206004820152601b60248201527f626c6f636b6c6f636b2072657175657374206e6f7420666f756e64000000000060448201526064016102a6565b60405163cd802c9160e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063cd802c9190602401602060405180830381865afa158015610f3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f63919061215f565b9392505050565b5f83815260208181526040808320815160a0808201845282548252600183015494820194909452825160e08101808552919492938501929091600280860192849260608401928592849290860191849182845b815481526020019060010190808311610fbd57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610ff357505050505081525050815260200160048201805461102390611f5d565b80601f016020809104026020016040519081016040528092919081815260200182805461104f90611f5d565b801561109a5780601f106110715761010080835404028352916020019161109a565b820191905f5260205f20905b81548152906001019060200180831161107d57829003601f168201915b505050505081526020016005820180546110b390611f5d565b80601f01602080910402602001604051908101604052809291908181526020018280546110df90611f5d565b801561112a5780601f106111015761010080835404028352916020019161112a565b820191905f5260205f20905b81548152906001019060200180831161110d57829003601f168201915b505050505081525050815260200160088201805461114790611f5d565b80601f016020809104026020016040519081016040528092919081815260200182805461117390611f5d565b80156111be5780601f10611195576101008083540402835291602001916111be565b820191905f5260205f20905b8154815290600101906020018083116111a157829003601f168201915b5050509183525050600991909101546001600160a01b0316602090910152805190915061123f5760405162461bcd60e51b815260206004820152602960248201527f6e6f206d61746368696e6720626c6f636b6c6f636b207265717565737420666f6044820152681c881d1a185d081a5960ba1b60648201526084016102a6565b6060810182905260808101516040515f916001600160a01b031690632eca0c0160e11b90611273908890889060240161217e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516112b1919061219e565b5f604051808303815f865af19150503d805f81146112ea576040519150601f19603f3d011682016040523d82523d5f602084013e6112ef565b606091505b505090508061131457604051630a841a9b60e11b8152600481018690526024016102a6565b847f33b40097ac8b0a5517c18a7039d9a7aa5c2454fce1aef0eb090c76882533374c8360200151846040015187604051611350939291906121b9565b60405180910390a25f85815260208190526040812081815560018101829055600281018281556003820183905560048201839055600582018390559091908161139c6006850182611838565b6113a9600583015f611838565b506113b99050600883015f611838565b5060090180546001600160a01b03191690555050505050565b825160609060ff8111156113fb57846040516313727cdd60e11b81526004016102a69190611979565b60408051608880825260c082019092525f916020820181803683370190505090505f81865f875f8b8860405160200161143a97969594939291906121e3565b60405160208183030381529060405290505f818051906020012090505f8160018a8760405160200161146f9493929190612267565b60408051601f19818403018152919052805160208201209091505f60ff891667ffffffffffffffff8111156114a6576114a6611c4e565b6040519080825280601f01601f1916602001820160405280156114d0576020820181803683370190505b5090505f60056114e4601f60ff8d166122ac565b901c905060015b8181101561154a578584186115018260016122ac565b8e8b6040516020016115169493929190612267565b60408051808303601f1901815291905260205f198301810285018101959095528051948101949094209394506001016114eb565b505f1901602090810282010191909152955050505050509392505050565b5f80611576848460306113d2565b601881015160308201519192506001600160c01b0391821691165f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478381600160c01b850908979650505050505050565b604080518082019091525f80825260208201526115e2611872565b6001815260026020820152604081018390525f60608360808460076107d05a03fa9050806116525760405162461bcd60e51b815260206004820152601f60248201527f4731207363616c6172206d756c7469706c69636174696f6e206661696c65640060448201526064016102a6565b5050919050565b5f805f604051806101800160405280865f01518152602001866020015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81526020016001815260200160028152602001855f015160016002811061173757611737612103565b60200201518152602001855f01515f6002811061175657611756612103565b60200201518152602001856020015160016002811061177757611777612103565b6020020151815260200185602001515f6002811061179757611797612103565b6020020151905290506117a8611890565b6020816101808460086107d05a03fa9051151593509150505b9250929050565b82600281019282156117f6579160200282015b828111156117f65782518255916020019190600101906117db565b506118029291506118ae565b5090565b6040518060a001604052805f81526020015f81526020016118256118c2565b8152606060208201525f60409091015290565b50805461184490611f5d565b5f825580601f10611853575050565b601f0160209004905f5260205f209081019061186f91906118ae565b50565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b5b80821115611802575f81556001016118af565b60405180606001604052806118d56118e9565b815260200160608152602001606081525090565b60405180604001604052806118fc61190e565b815260200161190961190e565b905290565b60405180604001604052806002906020820280368337509192915050565b5f5b8381101561194657818101518382015260200161192e565b50505f910152565b5f815180845261196581602086016020860161192c565b601f01601f19169290920160200192915050565b602081525f610f63602083018461194e565b5f60c0828403121561199b575f80fd5b50919050565b5f80604083850312156119b2575f80fd5b82359150602083013567ffffffffffffffff8111156119cf575f80fd5b6119db8582860161198b565b9150509250929050565b5f8083601f8401126119f5575f80fd5b50813567ffffffffffffffff811115611a0c575f80fd5b6020830191508360208285010111156117c1575f80fd5b5f805f805f60608688031215611a37575f80fd5b85359450602086013567ffffffffffffffff80821115611a55575f80fd5b611a6189838a016119e5565b90965094506040880135915080821115611a79575f80fd5b50611a86888289016119e5565b969995985093965092949392505050565b5f60208284031215611aa7575f80fd5b5035919050565b805f5b6002811015611ad0578151845260209384019390910190600101611ab1565b50505050565b5f8151611ae4848251611aae565b60200151611af56040850182611aae565b50602082015160c06080850152611b0f60c085018261194e565b9050604083015184820360a0860152611b28828261194e565b95945050505050565b85815284602082015260a060408201525f611b4f60a0830186611ad6565b8281036060840152611b61818661194e565b91505060018060a01b03831660808301529695505050505050565b6020815281516020820152602082015160408201525f604083015160a06060840152611bab60c0840182611ad6565b90506060840151601f19848303016080850152611bc8828261194e565b608095909501516001600160a01b031660a09490940193909352509192915050565b5f805f60408486031215611bfc575f80fd5b833567ffffffffffffffff80821115611c13575f80fd5b611c1f8783880161198b565b94506020860135915080821115611c34575f80fd5b50611c41868287016119e5565b9497909650939450505050565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff81118282101715611c8557611c85611c4e565b60405290565b5f82601f830112611c9a575f80fd5b611ca2611c62565b806040840185811115611cb3575f80fd5b845b81811015611ccd578035845260209384019301611cb5565b509095945050505050565b5f60808284031215611ce8575f80fd5b611cf0611c62565b9050611cfc8383611c8b565b8152611d0b8360408401611c8b565b602082015292915050565b5f82601f830112611d25575f80fd5b813567ffffffffffffffff80821115611d4057611d40611c4e565b604051601f8301601f19908116603f01168101908282118183101715611d6857611d68611c4e565b81604052838152866020858801011115611d80575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f60c08236031215611daf575f80fd5b6040516060810167ffffffffffffffff8282108183111715611dd357611dd3611c4e565b81604052611de13686611cd8565b83526080850135915080821115611df6575f80fd5b611e0236838701611d16565b602084015260a0850135915080821115611e1a575f80fd5b50611e2736828601611d16565b60408301525092915050565b5f808335601e19843603018112611e48575f80fd5b830160208101925035905067ffffffffffffffff811115611e67575f80fd5b8036038213156117c1575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6040818337604080820160408401375f611eba6080830183611e33565b60c06080860152611ecf60c086018284611e75565b915050611edf60a0840184611e33565b85830360a0870152611ef2838284611e75565b9695505050505050565b602081525f610f636020830184611e9d565b606081525f611f20606083018661194e565b8281036020840152611f32818661194e565b90508281036040840152611ef2818561194e565b5f60208284031215611f56575f80fd5b5051919050565b600181811c90821680611f7157607f821691505b60208210810361199b57634e487b7160e01b5f52602260045260245ffd5b601f821115611fd357805f5260205f20601f840160051c81016020851015611fb45750805b601f840160051c820191505b818110156105f1575f8155600101611fc0565b505050565b815167ffffffffffffffff811115611ff257611ff2611c4e565b612006816120008454611f5d565b84611f8f565b602080601f831160018114612039575f84156120225750858301515b5f19600386901b1c1916600185901b178555612090565b5f85815260208120601f198616915b8281101561206757888601518255948401946001909101908401612048565b508582101561208457878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b838152606060208201525f6120b06060830185611e9d565b9050826040830152949350505050565b5f808335601e198436030181126120d5575f80fd5b83018035915067ffffffffffffffff8211156120ef575f80fd5b6020019150368190038213156117c1575f80fd5b634e487b7160e01b5f52603260045260245ffd5b5f835161212881846020880161192c565b83519083019061213c81836020880161192c565b01949350505050565b5f60808284031215612155575f80fd5b610f638383611cd8565b5f6020828403121561216f575f80fd5b81518015158114610f63575f80fd5b828152604060208201525f612196604083018461194e565b949350505050565b5f82516121af81846020870161192c565b9190910192915050565b838152606060208201525f6121d16060830185611ad6565b8281036040840152611ef2818561194e565b5f88516121f4818460208d0161192c565b885190830190612208818360208d0161192c565b60f889811b6001600160f81b03199081169390920192835288811b8216600184015287901b811660028301528551612247816003850160208a0161192c565b60f89590951b169301600381019390935250506004019695505050505050565b8481525f60ff60f81b808660f81b166020840152845161228e81602186016020890161192c565b60f89490941b16919092016021810191909152602201949350505050565b8082018082111561050157634e487b7160e01b5f52601160045260245ffdfe424c4f434b4c4f434b5f424e3235345f584d443a4b454343414b2d3235365f48325f424c4f434b4c4f434b5f424e32353447315f584d443a4b454343414b2d3235365f535644575f524f5f48315f424c4f434b4c4f434b5f424e3235345f584d443a4b454343414b2d3235365f48345f424c4f434b4c4f434b5f424e3235345f584d443a4b454343414b2d3235365f48335fa2646970667358221220b1301b32985579d75ad590f2957d0305bf6d74791b6f010f07b02e79fab6412864736f6c63430008180033";

type BlocklockSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlocklockSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlocklockSender__factory extends ContractFactory {
  constructor(...args: BlocklockSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _decryptionSender: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_decryptionSender, overrides || {});
  }
  override deploy(
    _decryptionSender: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_decryptionSender, overrides || {}) as Promise<
      BlocklockSender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlocklockSender__factory {
    return super.connect(runner) as BlocklockSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlocklockSenderInterface {
    return new Interface(_abi) as BlocklockSenderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlocklockSender {
    return new Contract(address, _abi, runner) as unknown as BlocklockSender;
  }
}
