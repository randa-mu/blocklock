/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  BlocklockSender,
  BlocklockSenderInterface,
} from "../BlocklockSender";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_decryptionSender",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DST_H1_G1",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DST_H2",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DST_H3",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "DST_H4",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SCHEME_ID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "blocklockRequests",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "decryptionRequestID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "blockHeight",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "callback",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decrypt",
    inputs: [
      {
        name: "ciphertext",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decryptionSender",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDecryptionSender",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRequest",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct TypesLib.BlocklockRequest",
        components: [
          {
            name: "decryptionRequestID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "blockHeight",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "ciphertext",
            type: "tuple",
            internalType: "struct TypesLib.Ciphertext",
            components: [
              {
                name: "u",
                type: "tuple",
                internalType: "struct BLS.PointG2",
                components: [
                  {
                    name: "x",
                    type: "uint256[2]",
                    internalType: "uint256[2]",
                  },
                  {
                    name: "y",
                    type: "uint256[2]",
                    internalType: "uint256[2]",
                  },
                ],
              },
              {
                name: "v",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "w",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callback",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isInFlight",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "receiveDecryptionData",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "decryptionKey",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestBlocklock",
    inputs: [
      {
        name: "blockHeight",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "BlocklockCallbackSuccess",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "blockHeight",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        indexed: false,
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "decryptionKey",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BlocklockRequested",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "blockHeight",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "ciphertext",
        type: "tuple",
        indexed: false,
        internalType: "struct TypesLib.Ciphertext",
        components: [
          {
            name: "u",
            type: "tuple",
            internalType: "struct BLS.PointG2",
            components: [
              {
                name: "x",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
              {
                name: "y",
                type: "uint256[2]",
                internalType: "uint256[2]",
              },
            ],
          },
          {
            name: "v",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "w",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "requester",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "requestedAt",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "BlocklockCallbackFailed",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidDSTLength",
    inputs: [
      {
        name: "dst",
        type: "bytes",
        internalType: "bytes",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a060405234801562000010575f80fd5b5060405162002486380380620024868339810160408190526200003391620000bb565b806001600160a01b038116620000a85760405162461bcd60e51b815260206004820152603060248201527f43616e6e6f7420736574207a65726f206164647265737320617320646563727960448201526f383a34b7b71035b2bc9039b2b73232b960811b606482015260840160405180910390fd5b6001600160a01b031660805250620000ea565b5f60208284031215620000cc575f80fd5b81516001600160a01b0381168114620000e3575f80fd5b9392505050565b60805161236f620001175f395f818160ba01528181610321015281816105120152610ece015261236f5ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c80637350f4561161006e5780637350f45614610154578063826d362b1461015c5780638a1f165a14610180578063c58343ef146101b2578063c9bc18c4146101d2578063cd802c91146101e5575f80fd5b8063133c40c7146100b5578063235296f7146100f957806338c27d121461010e57806346cd2b42146101165780635d3be0011461013757806367b276af1461014c575b5f80fd5b6100dc7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610101610208565b6040516100f09190611955565b610101610224565b61012961012436600461197d565b610240565b6040519081526020016100f0565b61014a6101453660046119ff565b610507565b005b6101016105f8565b610101610614565b61016f61016a366004611a73565b610630565b6040516100f0959493929190611b0d565b61010160405180604001604052806013815260200172424e3235342d424c532d424c4f434b4c4f434b60681b81525081565b6101c56101c0366004611a73565b610887565b6040516100f09190611b58565b6101016101e0366004611bc6565b610b46565b6101f86101f3366004611a73565b610e5d565b60405190151581526020016100f0565b6040518060600160405280602c81526020016122ca602c913981565b6040518060600160405280602281526020016122a86022913981565b5f4383116102af5760405162461bcd60e51b815260206004820152603160248201527f626c6f636b486569676874206d757374206265207374726963746c7920677265604482015270185d195c881d1a185b8818dd5c9c995b9d607a1b60648201526084015b60405180910390fd5b5f6040518060a001604052805f8152602001858152602001846102d190611d7b565b815260200160405180602001604052805f8152508152602001336001600160a01b031681525090505f8460405160200161030d91815260200190565b60405160208183030381529060405290505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f87f0e6160405180604001604052806013815260200172424e3235342d424c532d424c4f434b4c4f434b60681b8152508760405160200161038b9190611ed8565b604051602081830303815290604052856040518463ffffffff1660e01b81526004016103b993929190611eea565b6020604051808303815f875af11580156103d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103f99190611f22565b8084525f818152602081815260409182902086518155908601516001820155908501518051805193945086936002808501929183916104399183916117a4565b50602082015161044f90600280840191906117a4565b505050602082015160048201906104669082611fb4565b506040820151600582019061047b9082611fb4565b505050606082015160088201906104929082611fb4565b5060809190910151600990910180546001600160a01b0319166001600160a01b03909216919091179055604051339082907f126e74afe6053bc58ebb2677b900753aa56801a8b86023af245885b817dc7c2e906104f4908a908a904290612074565b60405180910390a3925050505b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461057f5760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792044656372797074696f6e53656e6465722063616e2063616c6c000060448201526064016102a6565b6105f18585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f890181900481028201810190925287815292508791508690819084018382808284375f92019190915250610f4692505050565b5050505050565b6040518060600160405280602281526020016122f66022913981565b6040518060600160405280602281526020016123186022913981565b5f602081905290815260409081902080546001820154835160e0810194859052919390929190600280840191839160608301918491839160a0860191849182845b81548152602001906001019080831161067157505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116106a75750505050508152505081526020016004820180546106d790611f39565b80601f016020809104026020016040519081016040528092919081815260200182805461070390611f39565b801561074e5780601f106107255761010080835404028352916020019161074e565b820191905f5260205f20905b81548152906001019060200180831161073157829003601f168201915b5050505050815260200160058201805461076790611f39565b80601f016020809104026020016040519081016040528092919081815260200182805461079390611f39565b80156107de5780601f106107b5576101008083540402835291602001916107de565b820191905f5260205f20905b8154815290600101906020018083116107c157829003601f168201915b505050505081525050908060080180546107f790611f39565b80601f016020809104026020016040519081016040528092919081815260200182805461082390611f39565b801561086e5780601f106108455761010080835404028352916020019161086e565b820191905f5260205f20905b81548152906001019060200180831161085157829003601f168201915b505050600990930154919250506001600160a01b031685565b61088f6117e2565b5f82815260208181526040808320815160a0808201845282548252600183015494820194909452825160e08101808552919492938501929091600280860192849260608401928592849290860191849182845b8154815260200190600101908083116108e257505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161091857505050505081525050815260200160048201805461094890611f39565b80601f016020809104026020016040519081016040528092919081815260200182805461097490611f39565b80156109bf5780601f10610996576101008083540402835291602001916109bf565b820191905f5260205f20905b8154815290600101906020018083116109a257829003601f168201915b505050505081526020016005820180546109d890611f39565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0490611f39565b8015610a4f5780601f10610a2657610100808354040283529160200191610a4f565b820191905f5260205f20905b815481529060010190602001808311610a3257829003601f168201915b5050505050815250508152602001600882018054610a6c90611f39565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9890611f39565b8015610ae35780601f10610aba57610100808354040283529160200191610ae3565b820191905f5260205f20905b815481529060010190602001808311610ac657829003601f168201915b5050509183525050600991909101546001600160a01b031660209091015280519091506105015760405162461bcd60e51b81526020600482015260116024820152701a5b9d985b1a59081c995c5d595cdd1251607a1b60448201526064016102a6565b6060610100829003610b9a5760405162461bcd60e51b815260206004820152601d60248201527f696e76616c69642064656372797074696f6e206b6579206c656e67746800000060448201526064016102a6565b610100610baa60a086018661209c565b905010610bf95760405162461bcd60e51b815260206004820152601d60248201527f6d657373616765206f6620756e737570706f72746564206c656e67746800000060448201526064016102a6565b5f610c07608086018661209c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509394505050505b83811015610c9b57848482818110610c5757610c576120df565b9050013560f81c60f81b828281518110610c7357610c736120df565b0160200180516001600160f81b0319908116909218909116905f82901a905350600101610c3d565b505f610caa60a087018761209c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250604080516060810190915260228082529596509094610d15945090925090506122f6602083013984610d0e60a08b018b61209c565b90506113ae565b90505f5b610d2660a089018961209c565b9050811015610d8657818181518110610d4157610d416120df565b602001015160f81c60f81b838281518110610d5e57610d5e6120df565b0160200180516001600160f81b0319908116909218909116905f82901a905350600101610d19565b505f610dcb604051806060016040528060228152602001612318602291398585604051602001610db79291906120f3565b604051602081830303815290604052611544565b90505f610dd7826115a3565b90505f80610df383610dee368e90038e018e612121565b611635565b909250905060018215158215151414610e4e5760405162461bcd60e51b815260206004820152601d60248201527f696e76616c69642063697068657274657874207265676973746572656400000060448201526064016102a6565b50939998505050505050505050565b5f8181526020819052604081205480610eb85760405162461bcd60e51b815260206004820152601b60248201527f626c6f636b6c6f636b2072657175657374206e6f7420666f756e64000000000060448201526064016102a6565b60405163cd802c9160e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063cd802c9190602401602060405180830381865afa158015610f1b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f3f919061213b565b9392505050565b5f83815260208181526040808320815160a0808201845282548252600183015494820194909452825160e08101808552919492938501929091600280860192849260608401928592849290860191849182845b815481526020019060010190808311610f9957505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610fcf575050505050815250508152602001600482018054610fff90611f39565b80601f016020809104026020016040519081016040528092919081815260200182805461102b90611f39565b80156110765780601f1061104d57610100808354040283529160200191611076565b820191905f5260205f20905b81548152906001019060200180831161105957829003601f168201915b5050505050815260200160058201805461108f90611f39565b80601f01602080910402602001604051908101604052809291908181526020018280546110bb90611f39565b80156111065780601f106110dd57610100808354040283529160200191611106565b820191905f5260205f20905b8154815290600101906020018083116110e957829003601f168201915b505050505081525050815260200160088201805461112390611f39565b80601f016020809104026020016040519081016040528092919081815260200182805461114f90611f39565b801561119a5780601f106111715761010080835404028352916020019161119a565b820191905f5260205f20905b81548152906001019060200180831161117d57829003601f168201915b5050509183525050600991909101546001600160a01b0316602090910152805190915061121b5760405162461bcd60e51b815260206004820152602960248201527f6e6f206d61746368696e6720626c6f636b6c6f636b207265717565737420666f6044820152681c881d1a185d081a5960ba1b60648201526084016102a6565b6060810182905260808101516040515f916001600160a01b031690632eca0c0160e11b9061124f908890889060240161215a565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161128d919061217a565b5f604051808303815f865af19150503d805f81146112c6576040519150601f19603f3d011682016040523d82523d5f602084013e6112cb565b606091505b50509050806112f057604051630a841a9b60e11b8152600481018690526024016102a6565b847f33b40097ac8b0a5517c18a7039d9a7aa5c2454fce1aef0eb090c76882533374c836020015184604001518760405161132c93929190612195565b60405180910390a25f8581526020819052604081208181556001810182905560028101828155600382018390556004820183905560058201839055909190816113786006850182611814565b611385600583015f611814565b506113959050600883015f611814565b5060090180546001600160a01b03191690555050505050565b825160609060ff8111156113d757846040516313727cdd60e11b81526004016102a69190611955565b60408051608880825260c082019092525f916020820181803683370190505090505f81865f875f8b8860405160200161141697969594939291906121bf565b60405160208183030381529060405290505f818051906020012090505f8160018a8760405160200161144b9493929190612243565b60408051601f19818403018152919052805160208201209091505f60ff891667ffffffffffffffff81111561148257611482611c2a565b6040519080825280601f01601f1916602001820160405280156114ac576020820181803683370190505b5090505f60056114c0601f60ff8d16612288565b901c905060015b81811015611526578584186114dd826001612288565b8e8b6040516020016114f29493929190612243565b60408051808303601f1901815291905260205f198301810285018101959095528051948101949094209394506001016114c7565b505f1901602090810282010191909152955050505050509392505050565b5f80611552848460306113ae565b601881015160308201519192506001600160c01b0391821691165f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478381600160c01b850908979650505050505050565b604080518082019091525f80825260208201526115be61184e565b6001815260026020820152604081018390525f60608360808460076107d05a03fa90508061162e5760405162461bcd60e51b815260206004820152601f60248201527f4731207363616c6172206d756c7469706c69636174696f6e206661696c65640060448201526064016102a6565b5050919050565b5f805f604051806101800160405280865f01518152602001866020015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81526020016001815260200160028152602001855f0151600160028110611713576117136120df565b60200201518152602001855f01515f60028110611732576117326120df565b602002015181526020018560200151600160028110611753576117536120df565b6020020151815260200185602001515f60028110611773576117736120df565b60200201519052905061178461186c565b6020816101808460086107d05a03fa9051151593509150505b9250929050565b82600281019282156117d2579160200282015b828111156117d25782518255916020019190600101906117b7565b506117de92915061188a565b5090565b6040518060a001604052805f81526020015f815260200161180161189e565b8152606060208201525f60409091015290565b50805461182090611f39565b5f825580601f1061182f575050565b601f0160209004905f5260205f209081019061184b919061188a565b50565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b5b808211156117de575f815560010161188b565b60405180606001604052806118b16118c5565b815260200160608152602001606081525090565b60405180604001604052806118d86118ea565b81526020016118e56118ea565b905290565b60405180604001604052806002906020820280368337509192915050565b5f5b8381101561192257818101518382015260200161190a565b50505f910152565b5f8151808452611941816020860160208601611908565b601f01601f19169290920160200192915050565b602081525f610f3f602083018461192a565b5f60c08284031215611977575f80fd5b50919050565b5f806040838503121561198e575f80fd5b82359150602083013567ffffffffffffffff8111156119ab575f80fd5b6119b785828601611967565b9150509250929050565b5f8083601f8401126119d1575f80fd5b50813567ffffffffffffffff8111156119e8575f80fd5b60208301915083602082850101111561179d575f80fd5b5f805f805f60608688031215611a13575f80fd5b85359450602086013567ffffffffffffffff80821115611a31575f80fd5b611a3d89838a016119c1565b90965094506040880135915080821115611a55575f80fd5b50611a62888289016119c1565b969995985093965092949392505050565b5f60208284031215611a83575f80fd5b5035919050565b805f5b6002811015611aac578151845260209384019390910190600101611a8d565b50505050565b5f8151611ac0848251611a8a565b60200151611ad16040850182611a8a565b50602082015160c06080850152611aeb60c085018261192a565b9050604083015184820360a0860152611b04828261192a565b95945050505050565b85815284602082015260a060408201525f611b2b60a0830186611ab2565b8281036060840152611b3d818661192a565b91505060018060a01b03831660808301529695505050505050565b6020815281516020820152602082015160408201525f604083015160a06060840152611b8760c0840182611ab2565b90506060840151601f19848303016080850152611ba4828261192a565b608095909501516001600160a01b031660a09490940193909352509192915050565b5f805f60408486031215611bd8575f80fd5b833567ffffffffffffffff80821115611bef575f80fd5b611bfb87838801611967565b94506020860135915080821115611c10575f80fd5b50611c1d868287016119c1565b9497909650939450505050565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff81118282101715611c6157611c61611c2a565b60405290565b5f82601f830112611c76575f80fd5b611c7e611c3e565b806040840185811115611c8f575f80fd5b845b81811015611ca9578035845260209384019301611c91565b509095945050505050565b5f60808284031215611cc4575f80fd5b611ccc611c3e565b9050611cd88383611c67565b8152611ce78360408401611c67565b602082015292915050565b5f82601f830112611d01575f80fd5b813567ffffffffffffffff80821115611d1c57611d1c611c2a565b604051601f8301601f19908116603f01168101908282118183101715611d4457611d44611c2a565b81604052838152866020858801011115611d5c575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f60c08236031215611d8b575f80fd5b6040516060810167ffffffffffffffff8282108183111715611daf57611daf611c2a565b81604052611dbd3686611cb4565b83526080850135915080821115611dd2575f80fd5b611dde36838701611cf2565b602084015260a0850135915080821115611df6575f80fd5b50611e0336828601611cf2565b60408301525092915050565b5f808335601e19843603018112611e24575f80fd5b830160208101925035905067ffffffffffffffff811115611e43575f80fd5b80360382131561179d575f80fd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6040818337604080820160408401375f611e966080830183611e0f565b60c06080860152611eab60c086018284611e51565b915050611ebb60a0840184611e0f565b85830360a0870152611ece838284611e51565b9695505050505050565b602081525f610f3f6020830184611e79565b606081525f611efc606083018661192a565b8281036020840152611f0e818661192a565b90508281036040840152611ece818561192a565b5f60208284031215611f32575f80fd5b5051919050565b600181811c90821680611f4d57607f821691505b60208210810361197757634e487b7160e01b5f52602260045260245ffd5b601f821115611faf57805f5260205f20601f840160051c81016020851015611f905750805b601f840160051c820191505b818110156105f1575f8155600101611f9c565b505050565b815167ffffffffffffffff811115611fce57611fce611c2a565b611fe281611fdc8454611f39565b84611f6b565b602080601f831160018114612015575f8415611ffe5750858301515b5f19600386901b1c1916600185901b17855561206c565b5f85815260208120601f198616915b8281101561204357888601518255948401946001909101908401612024565b508582101561206057878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b838152606060208201525f61208c6060830185611e79565b9050826040830152949350505050565b5f808335601e198436030181126120b1575f80fd5b83018035915067ffffffffffffffff8211156120cb575f80fd5b60200191503681900382131561179d575f80fd5b634e487b7160e01b5f52603260045260245ffd5b5f8351612104818460208801611908565b835190830190612118818360208801611908565b01949350505050565b5f60808284031215612131575f80fd5b610f3f8383611cb4565b5f6020828403121561214b575f80fd5b81518015158114610f3f575f80fd5b828152604060208201525f612172604083018461192a565b949350505050565b5f825161218b818460208701611908565b9190910192915050565b838152606060208201525f6121ad6060830185611ab2565b8281036040840152611ece818561192a565b5f88516121d0818460208d01611908565b8851908301906121e4818360208d01611908565b60f889811b6001600160f81b03199081169390920192835288811b8216600184015287901b811660028301528551612223816003850160208a01611908565b60f89590951b169301600381019390935250506004019695505050505050565b8481525f60ff60f81b808660f81b166020840152845161226a816021860160208901611908565b60f89490941b16919092016021810191909152602201949350505050565b8082018082111561050157634e487b7160e01b5f52601160045260245ffdfe424c4f434b4c4f434b5f424e3235345f584d443a4b454343414b2d3235365f48325f424c4f434b4c4f434b5f424e32353447315f584d443a4b454343414b2d3235365f535644575f524f5f48315f424c4f434b4c4f434b5f424e3235345f584d443a4b454343414b2d3235365f48345f424c4f434b4c4f434b5f424e3235345f584d443a4b454343414b2d3235365f48335fa264697066735822122068a2f537146d4ae64f695ef323715dd1ef8c4eb648579b2c30aa4fc73111ddda64736f6c63430008180033";

type BlocklockSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlocklockSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlocklockSender__factory extends ContractFactory {
  constructor(...args: BlocklockSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _decryptionSender: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_decryptionSender, overrides || {});
  }
  override deploy(
    _decryptionSender: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_decryptionSender, overrides || {}) as Promise<
      BlocklockSender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BlocklockSender__factory {
    return super.connect(runner) as BlocklockSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlocklockSenderInterface {
    return new Interface(_abi) as BlocklockSenderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlocklockSender {
    return new Contract(address, _abi, runner) as unknown as BlocklockSender;
  }
}
